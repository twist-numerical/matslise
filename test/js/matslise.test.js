const test = require('ava');
const Module = require('../matslise/matslise');

const correct = [-0.110248816992, 3.917024772998, 9.047739259809, 16.032970081406, 25.020840823290,
    36.014289910628, 49.010418249424, 64.007937189250, 81.006250326633, 100.005050675159,
    121.004166761269, 144.003496558993, 169.002976224509, 196.002564124230, 225.002232157099,
    256.001960793939, 289.001736117776, 324.001547992331, 361.001388892288, 400.001253135325,
    441.001136365493, 484.001035198089, 529.000946970769, 576.000869566047, 625.000801282700,
    676.000740741253, 729.000686813595, 784.000638569932, 841.000595238360, 900.000556173742,
    961.000520833511, 1024.000488758700, 1089.000459558945, 1156.000432900534, 1225.000408496817,
    1296.000386100458, 1369.000365497137, 1444.000346500398, 1521.000328947413, 1600.000312695473,
    1681.000297619080, 1764.000283607515, 1849.000270562795, 1936.000258397953, 2025.000247035591,
    2116.000236406635, 2209.000226449289, 2304.000217108132, 2401.000208333344, 2500.000200080042,
    2601.000192307701, 2704.000184979661, 2809.000178062684, 2916.000171526593, 3025.000165343920,
    3136.000159489695, 3249.000153940890, 3364.000148676857, 3481.000143678164, 3600.000138927577,
    3721.000134408604, 3844.000130106689, 3969.000126008066, 4096.000122100123, 4225.000118371213,
    4356.000114810563, 4489.000111408200, 4624.000108154878, 4761.000105042017, 4900.000102061645,
    5041.000099206349, 5184.000096469226, 5329.000093843843, 5476.000091324200, 5625.000088904693,
    5776.000086580086, 5929.000084345478, 6084.000082196284, 6241.000080128204, 6400.000078137208,
    6561.000076219510, 6724.000074371559, 6889.000072590010, 7056.000070871721, 7225.000069213730,
    7396.000067613250, 7569.000066067651, 7744.000064574452, 7921.000063131311, 8100.000061736015,
    8281.000060386470, 8464.000059080701, 8649.000057816833, 8836.000056593093, 9025.000055407798,
    9216.000054259357, 9409.000053146274, 9604.000052067058, 9801.000051020470,
    10000.000050004997, 10201.000049019618, 10404.000048063055, 10609.000047134234,
    10816.000046232080, 11025.000045355584, 11236.000044503779, 11449.000043675756,
    11664.000042870613, 11881.000042087557, 12100.000041325726, 12321.000040584424,
    12544.000039862867, 12769.000039160412, 12996.000038476333, 13225.000037810047,
    13456.000037160904, 13689.000036528345, 13924.000035911797, 14161.000035310730,
    14400.000034724628, 14641.000034152999, 14884.000033595372, 15129.000033051290,
    15376.000032520320, 15625.000032002043, 15876.000031496058, 16129.000031001979,
    16384.000030519437, 16641.000030048071, 16900.000029587543, 17161.000029137522,
    17424.000028697694, 17689.000028267747, 17956.000027847389, 18225.000027436341,
    18496.000027034326, 18769.000026641086, 19044.000026256363, 19321.000025879912,
    19600.000025511497, 19881.000025150901, 20164.000024797893, 20449.000024452263,
    20736.000024113811, 21025.000023782337, 21316.000023457651, 21609.000023139572,
    21904.000022827917, 22201.000022522516, 22500.000022223201, 22801.000021929820,
    23104.000021642205, 23409.000021360211, 23716.000021083702, 24025.000020812513,
    24336.000020546544, 24649.000020285614, 24964.000020029634, 25281.000019778472,
    25600.000019533418, 25921.000019290117, 26244.000019054482, 26569.000018819625,
    26896.000018590817, 27225.000018366140, 27556.000018145518, 27889.000017928851,
    28224.000017716036, 28561.000017506991, 28900.000017301631, 29241.000017099854,
    29584.000016901591, 29929.000016706752, 30276.000016515267, 30625.000016327052,
    30976.000016142039, 31329.000015960151, 31684.000015781323, 32041.000015605485,
    32400.000015432564, 32761.000015262507, 33124.000015095240, 33489.000014930709,
    33856.000014768855, 34225.000014609621, 34596.000014452948, 34969.000014298777,
    35344.000014147059, 35721.000013997749, 36100.000013850789, 36481.000013706129,
    36864.000013563724, 37249.000013423531, 37636.000013285491, 38025.000013149576,
    38416.000013015735, 38809.000012883931, 39204.000012754113, 39601.000012626253,
    40000.000012500299, 40401.000012376229];

(new Module()).then(({Matslise}) => {
    test('mathieu', t => {
        const matslise = new Matslise((x) => 2 * Math.cos(2 * x), 0, Math.PI, 1e-5);
        const eigenvalues = matslise.eigenvaluesByIndex(0, correct.length, [0, 1], [0, 1]);
        t.is(correct.length, eigenvalues.length);
        for (let i = 0; i < correct.length; ++i) {
            t.is(i, eigenvalues[i].first);
            t.true(Math.abs(correct[i] - eigenvalues[i].second) < 1e-5,
                `${correct[i]} != ${eigenvalues[i].second}`);
        }
    });
});