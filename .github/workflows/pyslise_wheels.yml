name: Build pyslise.whl

on:
  push:
    tags:
      - v3.*
  workflow_dispatch:

jobs:
  build_wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, macos-12 ]
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13', '3.14' ]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install setuptools wheel
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: mkdir build
      - if: ${{startsWith(matrix.os, 'windows')}}
        name: CMake (Windows)
        run: |
          cmake
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF `
            -DPYBIND11_LTO_CXX_FLAGS="" ..
          cmake --build . --target build_wheel --config Release
        working-directory: ./build
        env:
          CXXFLAGS: "-DMS_WIN64=1 -D_hypot=hypot -static-libgcc -static"
          LDFLAGS: "-static"
      - if: ${{!startsWith(matrix.os, 'windows')}}
        name: CMake (not Windows)
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Release \
            -DPYTHON_EXECUTABLE=$(which python)
          cmake --build . --target build_wheel --config Release -- -j 3
        working-directory: ./build
      - uses: actions/upload-artifact@v5
        with:
          name: pyslise_${{ matrix.os }}_${{ matrix.python-version }}
          path: ./build/matslise/dist/*.whl
  test_wheel:
    if: always()
    runs-on: ${{ matrix.os }}
    needs: build_wheel
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, macos-12 ]
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13', '3.14' ]
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: pyslise_${{ matrix.os }}_${{ matrix.python-version }}
          path: ../pyslise_wheel
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          pip install wheel
      - name: install pyslise
        if: ${{startsWith(matrix.os, 'windows')}}
        run: |
          pip install $(get-item ../pyslise_wheel/*.whl)
      - name: install pyslise
        if: ${{!startsWith(matrix.os, 'windows')}}
        run: |
          pip install ../pyslise_wheel/*.whl
      - uses: actions/checkout@v2
      - name: test pyslise
        run: |
          python test/pyslise/test_docs.py --verbose
  build_wheel_manylinux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: mkdir build
      - name: run docker manylinux
        run: |
          docker run -v $(pwd):/opt/matslise quay.io/pypa/manylinux_2_28_x86_64 /opt/matslise/docker_build.sh
      - uses: actions/upload-artifact@v5
        with:
          name: pyslise_manylinux2010
          path: ./wheelhouse/*.whl
  test_wheel_manylinux:
    if: always()
    runs-on: ubuntu-22.04
    needs: build_wheel_manylinux
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13', '3.14' ]
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: pyslise_manylinux2010
          path: ../pyslise_wheel
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          pip install wheel
      - name: install pyslise
        run: |
          pip install ../pyslise_wheel/pyslise-*-cp$(tr -d . <<< ${{ matrix.python-version }})-*manylinux2010_x86_64.whl
      - uses: actions/checkout@v2
      - name: test pyslise
        run: |
          python test/pyslise/test_docs.py --verbos
  upload_wheels:
    if: always()
    runs-on: ubuntu-22.04
    needs: [ test_wheel, test_wheel_manylinux ]
    steps:
      - uses: actions/download-artifact@v5
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: "Install twine"
        run: |
          pip install twine
      - name: "Check all wheels"
        run: |
          twine check **/*.whl
      #- name: "Upload to pypi"
      #    run: |
      #    twine upload --skip-existing -u __token__ -p ${{ secrets.PYPI_TOKEN }} **/*.whl
