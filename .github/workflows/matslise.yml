name: Build and test

on: [ push ]

jobs:
  matslise_test:
    name: Test matslise
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, ubuntu-22.04, macos-12 ]
    steps:
      - uses: actions/checkout@v2
      - run: mkdir build
      - name: CMake
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release -DMATSLISE_MATSCS=${{ startsWith(matrix.os, 'windows') && 'OFF' || 'ON' }} ..
          cmake --build . --target matslise_test --config Release
        working-directory: ./build
      - name: Run tests
        run: |
          ctest -V -C Release
        working-directory: ./build

  matslise_test_float128:
    name: Test matslise (float128)
    runs-on: ubuntu-22.04
    steps:
      - name: Install boost
        run: sudo apt-get install libboost-all-dev
      - uses: actions/checkout@v2
      - run: mkdir build
      - name: CMake
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Release -DMATSLISE_LONG_DOUBLE=ON -DMATSLISE_QUADMATH=ON
          cmake --build . --target matslise_test --config Release -- -j 3
        working-directory: ./build
      - name: Run tests
        run: |
          ctest -V -C Release
        working-directory: ./build

  matslise_test_long:
    name: Test matslise (long double)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - run: mkdir build
      - name: CMake
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Release -DMATSLISE_LONG_DOUBLE=ON
          cmake --build . --target matslise_test --config Release -- -j 3
        working-directory: ./build
      - name: Run tests
        run: |
          ctest -V -C Release
        working-directory: ./build


  pyslise_test:
    name: Test pyslise
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, ubuntu-22.04, macos-12 ]
        python-version: [ 3.12 ]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install setuptools wheel
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: mkdir build
      - if: ${{startsWith(matrix.os, 'windows')}}
        name: CMake (Windows)
        run: | # The runner has issues with lto: "-DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF `"
          cmake -DCMAKE_BUILD_TYPE=Release `
            -DMATSLISE_MATSCS=OFF `
            -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF `
            -DPYBIND11_LTO_CXX_FLAGS="" ..
          cmake --build . --target pyslise_install --config Release
        working-directory: ./build
        env:
          CXXFLAGS: "-DMS_WIN64=1 -D_hypot=hypot -static-libgcc -static-libstdc++ -static"
          LDFLAGS: "-static"
      - if: ${{!startsWith(matrix.os, 'windows')}}
        name: CMake (not Windows)
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Release \
            -DPYTHON_EXECUTABLE=$(which python)
          cmake --build . --target pyslise_install --config Release -- -j 3
        working-directory: ./build
      - name: test pyslise
        run: |
          python test/pyslise/test_docs.py

#  matslise_wasm_test:
#    name: Test matslise.wasm
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up Node
#        uses: actions/setup-node@v3
#        with:
#          node-version: 18
#      - name: Install emscripten
#        uses: mymindstorm/setup-emsdk@v11
#        with:
#          version: 1.39.20
#      - name: NPM install ava
#        run: |
#          npm install -g ava
#      - uses: actions/checkout@v2
#      - run: mkdir build
#      - name: CMake
#        run: |
#          emcmake cmake ..  \
#            -DCMAKE_BUILD_TYPE=Release \
#            -DPYTHON_EXECUTABLE=$(which python)
#        working-directory: ./build
#      - name: Make matslise
#        run: |
#          emmake cmake --build . --target matslise_test --config Release -- -j 3
#        working-directory: ./build
#      - uses: actions/upload-artifact@v2-preview
#        with:
#          name: matslise_wasm
#          path: ./build/matslise/matslise.*
